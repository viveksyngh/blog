<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vivek Kumar Singh</title>
    <link>https://www.viveksyngh.info/blog/</link>
    <description>Recent content on Vivek Kumar Singh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Aug 2018 16:47:16 +0530</lastBuildDate>
    
	<atom:link href="https://www.viveksyngh.info/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Timeout Commands in Go</title>
      <link>https://www.viveksyngh.info/blog/timeout-command-in-go/</link>
      <pubDate>Tue, 28 Aug 2018 16:47:16 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/timeout-command-in-go/</guid>
      <description>Sometimes in our applications, we need to invoke external processes or commands (e.g CURL, Ping, SSH etc.) to perform some tasks. We can use os/exec Go package to invoke external processes. Most of the time we want to invoke these commands with timeouts. In this blog post, I am going to talk about the different ways in which we can invoke a command with a timeout.
Timeout with timer In this method, we will use a timer for the timeout.</description>
    </item>
    
    <item>
      <title>My Open Source Journey With OpenFaaS</title>
      <link>https://www.viveksyngh.info/blog/my-open-source-journey-with-openfaas/</link>
      <pubDate>Fri, 04 May 2018 19:53:58 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/my-open-source-journey-with-openfaas/</guid>
      <description>It all started in October 2017, I was actively looking for open source project to contribute when I came to know about Hacktoberfest. It is a month-long celebration of open source software organized by Github and Digital Ocean.
While browsing through the Hacktoberfest listed issues, I found an open issue from OpenFaaS. OpenFaaS project is written in Golang. Back then I knew python and had started learning Golang. I thought to give it a try.</description>
    </item>
    
    <item>
      <title>Deploying OpenFaas on Docker Swarm</title>
      <link>https://www.viveksyngh.info/blog/getting-started-with-openfaas/</link>
      <pubDate>Thu, 22 Feb 2018 16:41:22 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/getting-started-with-openfaas/</guid>
      <description>In this blog post, I am going to talk about how to deploy OpenFaas on Docker Swarm. OpenFaaS (Functions as a Service) is a framework for building serverless functions with Docker and Kubernetes. To know more about OpenFaas visit this link.
I have already setup a two node Docker Swarm cluster running on cloud service provider Civo. OpenFaas repository contains a script deploy_stack.sh which can be used to deploy OpenFaas stack.</description>
    </item>
    
    <item>
      <title>Getting started with Docker Swarm</title>
      <link>https://www.viveksyngh.info/blog/getting-started-with-swarm/</link>
      <pubDate>Wed, 21 Feb 2018 12:17:47 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/getting-started-with-swarm/</guid>
      <description>In this blog post, I am going to talk about how to set up a swarm cluster and some swarm basic commands. I will set up two node swarm cluster as an example.
I am going to provision two small size instances on cloud service provider called Civo. You can use any other cloud service provider like AWS, GCP, Azure or private cloud to provision instances. After setting up instances make sure that all instances are running on the same network and able to talk to each other.</description>
    </item>
    
    <item>
      <title>Install Docker on Ubuntu</title>
      <link>https://www.viveksyngh.info/blog/install-docker-on-ubuntu/</link>
      <pubDate>Tue, 20 Feb 2018 17:46:10 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/install-docker-on-ubuntu/</guid>
      <description>In this blog post, I am going to show how to install docker on ubuntu 16.04. We will install community edition of docker.
 Update the apt package index:
$ sudo apt-get update  Install packages to allow apt to use a repository over HTTPS:
$ sudo apt-get install \ apt-transport-https \ ca-certificates \ curl \ software-properties-common  Add Docker&amp;rsquo;s official GPG key:
$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  Verify the key fingerprint, It should match with 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</description>
    </item>
    
    <item>
      <title>Http Response in Golang</title>
      <link>https://www.viveksyngh.info/blog/http-response-in-go/</link>
      <pubDate>Sat, 17 Feb 2018 11:49:41 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/http-response-in-go/</guid>
      <description>In this blog post, I am going to talk about HTTP server and how to respond with different types of HTTP response(text, JSON, template) in Go.
Creating a web server in Go is very simple and we can do it by writing just a few lines of code. To create an HTTP server in go you need to use net/http package. This is how a simple HTTP server code looks like in Go.</description>
    </item>
    
    <item>
      <title>Download a file from URL in Python</title>
      <link>https://www.viveksyngh.info/blog/download-file-from-url-python/</link>
      <pubDate>Sat, 03 Feb 2018 01:05:59 +0530</pubDate>
      
      <guid>https://www.viveksyngh.info/blog/download-file-from-url-python/</guid>
      <description>This blog post is about how to download an image or other static content from a URL in python.
I am going to accomplish this without any additional python package. We will look at two different solutions for Python2 and Python3. So Let’s get started.
Before we start downloading the file, we need to get the filename from the URL. The string after the last backslash in URL is the filename.</description>
    </item>
    
  </channel>
</rss>